/*
 * Copyright © 2015-2016, AnHui Mobiao technology co. LTD Inc. All Rights Reserved.
 */

package com.mo008.crdm.models.device;

import com.mo008.crdm.models.device.base.BaseDevice;
import com.mo008.crdm.models.sys.User;
import com.mo008.services.UserService;

import goja.core.StringPool;
import goja.core.annotation.TableBind;
import goja.core.sqlinxml.SqlKit;
import com.jfinal.plugin.activerecord.Db;

import com.google.common.base.Strings;
import com.google.common.collect.Lists;

import org.apache.commons.lang3.StringUtils;

import java.util.Collections;
import java.util.List;

/**
 * Generated by JFinal.
 */
@TableBind(tableName = "mo_device")
public class Device extends BaseDevice<Device> {
    public static final Device dao = new Device();
    private static final long serialVersionUID = -1746599422210117582L;

    public List<Device> findByBatchId(int authbatchId) {
        return find(SqlKit.sql("device.findByBatchId"), authbatchId);
    }

    public boolean changeByDeleteStatus(String[] ids) {

        final String question_mark =
                StringUtils.repeat(StringPool.QUESTION_MARK, StringPool.COMMA, ids.length);
        List<Object> params = Lists.newArrayList();
        params.add(false);
        Collections.addAll(params, ids);
        return Db.update("update mo_device set status = ? where id in ( " + question_mark + ")", params.toArray()) >= 0;
    }

    public Device findByDeviceId(String deviceId) {
//        return findFirstByCache("devices", deviceId, SqlKit.sql("device.findByDeviceId"), deviceId);
        return findFirst(SqlKit.sql("device.findByDeviceId"), deviceId);
    }

    public List<Device> findByAll() {
        return find(SqlKit.sql("device.findByAll"), true);
    }

    /**
     * 通过省份查询系统状态统计
     *
     * @param code
     * @param type
     * @return
     */
    public List<Device> findForStatus(String code, int type) {

        if (UserService.getInstance().userType() == User.Type.ADMIN) {
            if (!Strings.isNullOrEmpty(code)) {
                if (type == 1) {
                    return find(SqlKit.sql("device.findForStatus").replace("1=1", "mi.area_sn like ? "), code + "%");
                } else {
                    return find(SqlKit.sql("device.findForStatus").replace("1=1", "area_sn = ? "), code);
                }
            } else {
                return find(SqlKit.sql("device.findForStatus"));
            }


        }else if(UserService.getInstance().userType() == User.Type.AGENTS){

            if (!Strings.isNullOrEmpty(code)) {
                if (type == 1) {
                    return find(SqlKit.sql("device.findForStatus").replace("1=1", "mi.area_sn like ? and exists (select 1 from mo_car_permission mcp where mcp.car_id = mi.id and mcp.user_id = ?) "), code + "%",UserService.getInstance().userId());
                } else {
                    return find(SqlKit.sql("device.findForStatus").replace("1=1", "area_sn = ?  and exists (select 1 from mo_car_permission mcp where mcp.car_id = mi.id and mcp.user_id = ?)"), code,UserService.getInstance().userId());
                }
            } else {
                return find(SqlKit.sql("device.findForStatus").replace("1=1", "exists (select 1 from mo_car_permission mcp where mcp.car_id = mi.id and mcp.user_id = ?) "),UserService.getInstance().userId());
            }

        }
        return null;
    }

    public Device findByCarNo(String carNo) {
        return findFirst("SELECT md.*, mci.id as car_id FROM mo_device md INNER JOIN mo_car_info mci ON mci.device_id = md.id WHERE mci.car_no = ? limit 1", carNo);
    }
}
